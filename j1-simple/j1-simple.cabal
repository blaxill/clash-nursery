name:                j1-simple
version:             0.1.0.0
license:             BSD3
author:              Ben Blaxill
maintainer:          Ben Blaxill <ben.blaxill@gmail.com>
copyright:           2018
category:            Hardware
build-type:          Simple
description: 
  Here is a Clash implementation of <https://github.com/jamesbowman/j1>, which
  is based upon (but not the same as) the authors original design at
  <http://www.excamera.com/files/j1.pdf>. Its longer than the original verilog
  implementation, due to the choice of added type safety. A quick summary of the
  J1:
  .
  * 16 bit von Neumann architecture with three basic instruction formats.
  * 13 bit program counter (this limits code length to 8K words).
  * 32 element (16 bit wide) return & data stacks.
  * Simple ALU with no conditional registers, carry flags or multiply/divide.
  * Simple control flow with no interrupts, exceptions or relative branches.
  * "Good performance and code density". 
  .
  Timing will be limited to the critical path(s) of memory read to input. In
  this simple cpu form, a memory read is issued every cycle to be availble for if
  the next instruction is the memory read.
synopsis:            Haskell reimplementation of <https://github.com/jamesbowman/j1>
cabal-version:       >=1.10

library
  hs-source-dirs:      src
  exposed-modules:     J1.Core
                     , J1.Types
                     , J1.Top
                     , J1.Ops
                     , J1
  build-depends:       base >= 4.7 && < 5
                     , ghc-typelits-extra
                     , ghc-typelits-natnormalise
                     , ghc-typelits-knownnat
                     , clash-prelude
                     , clash-ghc
                     , deepseq
                     , lens
                     , mtl
                     , singletons                >= 1.0     && < 3.0
                     , template-haskell
  default-language:    Haskell2010
  ghc-options:         -fplugin=GHC.TypeLits.Extra.Solver
                       -fplugin=GHC.TypeLits.Normalise
                       -fplugin=GHC.TypeLits.KnownNat.Solver

test-suite j1-simple-test
  type:                exitcode-stdio-1.0
  hs-source-dirs:      test
  main-is:             Spec.hs
  build-depends:       base
                     , ghc-typelits-extra
                     , ghc-typelits-natnormalise
                     , ghc-typelits-knownnat
                     , j1-simple
                     , clash-prelude
                     , hspec
                     , QuickCheck
                     , lens
                     , deepseq
                     , cryptohash
                     , bytestring
  ghc-options:         -threaded -rtsopts -with-rtsopts=-N
                       -fplugin=GHC.TypeLits.Extra.Solver
                       -fplugin=GHC.TypeLits.Normalise
                       -fplugin=GHC.TypeLits.KnownNat.Solver
  default-language:    Haskell2010
  other-modules:       J1.J1Spec
